# Regras de formatação:
#
#  | Sinal | Descrição                                                              |
#  |-------|------------------------------------------------------------------------|
#  | # --  | Comentário  renderizado no README.md.                                  |
#  | #     | Somente se definido após '# --', indica a continuação da sentença.     |
#  | ##    | Comentário é ignorado durante a renderização do README.md.             |
#
#  Leia mais em https://github.com/norwoodj/helm-docs

## Configuração da imagem da node-busybox
image:
  # -- Registro da imagem do Container
  registry: dockerhub.com
  # -- Repositório onde a imagem se encontra
  repository: luksjobs/node-busybox
  # -- Regra de pull da imagem (agora pela versão não mais por "latest").
  pullPolicy: IfNotPresent
  # -- Controle de versionamento de código utilizando TAG, refeencia no arquivo "Chart.yaml".
  tag: v1.1

## Configuração que expõe o serviço do aplicativo para acesso externo.
service:
  Name: "node-busybox-svc"
  Port: 3015
  containerPort: 3000
  targetPort: 3000

## Configuração do HPA da API do Beneficiário do Tasy

autoscaling: 
# Quantidade mínima e máxima das réplicas dos containers
  #Name: "node-busybox-hpa"
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# -- Role Based Access para definir os acessos aos Pods.
# [Ref doc](https://kubernetes.io/docs/admin/authorization/rbac/).
rbac:
  create: true  # Habilita a criação do ClusterRole
  Name: "node-busybox-role"
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims", "deployments", "serviceaccount"]
      verbs: ["*"]
  # -- Deprecated. Use `rbac.groups` instead.
  staticGroupName: ""
  # -- Use this to create RBAC resources for specified group subjects.
  groups:
    'node-busybox-plugins-default':
      create: false
      rules:
        - apiGroups: ["*"]
          resources: ["*"]
          verbs: ["get", "watch", "list"]
    'argocd':
      # -- Set it to `true` when using ArgoCD source plugin.
      create: false
      rules:
        - apiGroups: [""]
          resources: ["configmaps"]
          verbs: ["get", "update"]
        - apiGroups: ["argoproj.io"]
          resources: ["applications"]
          verbs: ["get", "patch"]
    'flux-read-patch':
      # -- Set it to `true` when using Flux executor plugin to enable `flux diff`.
      create: false
      rules:
        - apiGroups: ["*"]
          resources: ["*"]
          verbs: ["get", "watch", "list", "patch"]

# -- Configura a Política de Segurança de Pod para permitir que o Aplicativo seja executado em clusters restritos.
# [Ref doc](https://kubernetes.io/docs/concepts/policy/pod-security-policy/).
podSecurityPolicy: 
  enabled: false

# Criando uma conta de serviço para o aplicativo
serviceAccount:
  # -- Defina como true se você quiser que o Helm crie o ServiceAccount
  create: true
  # -- The name of the service account to use.
  # If not set, a name is generated using the fullname template.
  name: "node-busybox"
  # -- Extra annotations for the ServiceAccount.
  annotations: {}

# -- Configura o contexto de segurança para gerenciar os privilégios do usuário no Pod.
# [Ref doc](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod).
# @default -- Runs as a Non-Privileged user.
securityContext:
  runAsUser: 101
  runAsGroup: 101

# -- Configura o contexto de segurança do contêiner.
# [Ref doc](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container).
containerSecurityContext:
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true

nodeSelector: {}

tolerations: []

affinity: {}